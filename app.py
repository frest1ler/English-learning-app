"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import tkinter as tk
from tkinter import ttk
from config import WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE, COLORS, FONTS
from data.loader import DataLoader
from data.progress import ProgressManager
from ui.words_tab import WordsTab
from ui.exercises_tab import ExercisesTab
from ui.rules_tab import RulesTab
from ui.stats_tab import StatsTab

class EnglishLearningApp:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ"""
    
    def __init__(self, root):
        self.root = root
        self.setup_window()
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        self.words_data = DataLoader.load_words()
        self.exercises_data = DataLoader.load_exercises()
        self.rules_data = DataLoader.load_rules()
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        self.progress_data = ProgressManager.load()
        self.score = self.progress_data.get('score', 0)
        self.total_attempts = self.progress_data.get('total_attempts', 0)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_widgets()
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
        self.root.protocol("WM_DELETE_WINDOW", self.on_closing)
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
        self.bind_hotkeys()
    
    def setup_window(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞"""
        self.root.title(WINDOW_TITLE)
        self.root.geometry(f"{WINDOW_WIDTH}x{WINDOW_HEIGHT}")
        self.root.configure(bg=COLORS['light'])
    
    def bind_hotkeys(self):
        """–ü—Ä–∏–≤—è–∑–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à"""
        self.root.bind('<Control-s>', lambda e: self.save_progress())
    
    def on_closing(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.save_progress()
        self.root.destroy()
    
    def save_progress(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        ProgressManager.save(self.score, self.total_attempts)
    
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –°—Ç–∏–ª—å
        style = ttk.Style()
        style.theme_use('clam')
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.create_header()
        
        # Notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill='both', expand=True, padx=10, pady=10)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self.create_tabs()
    
    def create_header(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        header_frame = tk.Frame(self.root, bg=COLORS['dark'], height=60)
        header_frame.pack(fill='x')
        header_frame.pack_propagate(False)
        
        tk.Label(
            header_frame,
            text="üìö English Learning Application",
            font=FONTS['header'],
            bg=COLORS['dark'],
            fg='white'
        ).pack(pady=15)
    
    def create_tabs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫"""
        # –í–∫–ª–∞–¥–∫–∞ –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤ (—Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º —Ç–µ—Å—Ç–æ–º)
        words_frame = tk.Frame(self.notebook, bg=COLORS['light'])
        self.notebook.add(words_frame, text='üìñ –°–ª–æ–≤–∞—Ä—å')
        self.words_tab = WordsTab(words_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
        exercises_frame = tk.Frame(self.notebook, bg=COLORS['light'])
        self.notebook.add(exercises_frame, text='‚úèÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è')
        self.exercises_tab = ExercisesTab(exercises_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ –ø—Ä–∞–≤–∏–ª
        rules_frame = tk.Frame(self.notebook, bg=COLORS['light'])
        self.notebook.add(rules_frame, text='üìã –ü—Ä–∞–≤–∏–ª–∞')
        self.rules_tab = RulesTab(rules_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_frame = tk.Frame(self.notebook, bg=COLORS['light'])
        self.notebook.add(stats_frame, text='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        self.stats_tab = StatsTab(stats_frame, self)
    
    def update_stats(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        self.stats_tab.update()