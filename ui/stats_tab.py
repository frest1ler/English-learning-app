"""
–í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
"""

import tkinter as tk
from tkinter import messagebox
from config import COLORS, FONTS

class StatsTab:
    """–ö–ª–∞—Å—Å –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    
    def __init__(self, parent, app):
        self.parent = parent
        self.app = app
        self.create_ui()
    
    def create_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤–∫–ª–∞–¥–∫–∏"""
        stats_container = tk.Frame(self.parent, bg='white', relief='raised', bd=2)
        stats_container.pack(pady=20, padx=20, fill='both', expand=True)
        
        tk.Label(
            stats_container,
            text="üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            font=('Arial', 20, 'bold'),
            bg='white',
            fg=COLORS['dark']
        ).pack(pady=20)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–ª–æ–≤–∞–º
        words_frame = tk.Frame(stats_container, bg=COLORS['light'], relief='raised', bd=1)
        words_frame.pack(pady=10, padx=20, fill='x')
        
        tk.Label(
            words_frame,
            text="üìñ –°–ª–æ–≤–∞—Ä—å",
            font=FONTS['subtitle'],
            bg=COLORS['light']
        ).pack(pady=5)
        
        tk.Label(
            words_frame,
            text=f"–í—Å–µ–≥–æ —Å–ª–æ–≤: {len(self.app.words_data)}",
            font=FONTS['normal'],
            bg=COLORS['light']
        ).pack(pady=3)
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
        words_with_examples = sum(1 for word in self.app.words_data if word.get('example'))
        tk.Label(
            words_frame,
            text=f"–°–ª–æ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏: {words_with_examples}",
            font=FONTS['small'],
            bg=COLORS['light'],
            fg=COLORS['gray']
        ).pack(pady=2)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º
        exercises_frame = tk.Frame(stats_container, bg=COLORS['light'], relief='raised', bd=1)
        exercises_frame.pack(pady=10, padx=20, fill='x')
        
        tk.Label(
            exercises_frame,
            text="‚úèÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
            font=FONTS['subtitle'],
            bg=COLORS['light']
        ).pack(pady=5)
        
        self.stats_score_label = tk.Label(
            exercises_frame,
            text=f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {self.app.score}",
            font=FONTS['normal'],
            bg=COLORS['light'],
            fg=COLORS['success']
        )
        self.stats_score_label.pack(pady=3)
        
        self.stats_total_label = tk.Label(
            exercises_frame,
            text=f"üìù –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: {self.app.total_attempts}",
            font=FONTS['normal'],
            bg=COLORS['light']
        )
        self.stats_total_label.pack(pady=3)
        
        self.accuracy_label = tk.Label(
            exercises_frame,
            text="üìà –¢–æ—á–Ω–æ—Å—Ç—å: 0%",
            font=FONTS['normal'],
            bg=COLORS['light'],
            fg=COLORS['primary']
        )
        self.accuracy_label.pack(pady=3)
        
        # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è
        if 'last_session' in self.app.progress_data:
            tk.Label(
                stats_container,
                text=f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è: {self.app.progress_data['last_session']}",
                font=FONTS['small'],
                bg='white',
                fg=COLORS['gray']
            ).pack(pady=10)
        
        # –ö–Ω–æ–ø–∫–∏
        button_frame = tk.Frame(stats_container, bg='white')
        button_frame.pack(pady=20)
        
        tk.Button(
            button_frame,
            text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
            command=self.reset_stats,
            font=FONTS['normal'],
            bg=COLORS['danger'],
            fg='white',
            padx=20,
            pady=10
        ).pack(side='left', padx=5)
        
        tk.Button(
            button_frame,
            text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å",
            command=self.save_progress,
            font=FONTS['normal'],
            bg=COLORS['success'],
            fg='white',
            padx=20,
            pady=10
        ).pack(side='left', padx=5)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.update()
    
    def update(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        self.stats_score_label.config(text=f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {self.app.score}")
        self.stats_total_label.config(text=f"üìù –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: {self.app.total_attempts}")
        
        if self.app.total_attempts > 0:
            accuracy = (self.app.score / self.app.total_attempts) * 100
            self.accuracy_label.config(text=f"üìà –¢–æ—á–Ω–æ—Å—Ç—å: {accuracy:.1f}%")
    
    def reset_stats(self):
        """–°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?"):
            self.app.score = 0
            self.app.total_attempts = 0
            self.update()
            self.app.save_progress()
            messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞!")
    
    def save_progress(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        self.app.save_progress()
        messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
